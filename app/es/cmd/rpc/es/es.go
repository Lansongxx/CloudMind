// Code generated by goctl. DO NOT EDIT.
// Source: es.proto

package es

import (
	"context"

	"CloudMind/app/es/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddTextReq    = pb.AddTextReq
	AddTextResp   = pb.AddTextResp
	SearchForReq  = pb.SearchForReq
	SearchForResp = pb.SearchForResp

	Es interface {
		SearchFor(ctx context.Context, in *SearchForReq, opts ...grpc.CallOption) (*SearchForResp, error)
		AddText(ctx context.Context, in *AddTextReq, opts ...grpc.CallOption) (*AddTextResp, error)
	}

	defaultEs struct {
		cli zrpc.Client
	}
)

func NewEs(cli zrpc.Client) Es {
	return &defaultEs{
		cli: cli,
	}
}

func (m *defaultEs) SearchFor(ctx context.Context, in *SearchForReq, opts ...grpc.CallOption) (*SearchForResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchFor(ctx, in, opts...)
}

func (m *defaultEs) AddText(ctx context.Context, in *AddTextReq, opts ...grpc.CallOption) (*AddTextResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.AddText(ctx, in, opts...)
}
