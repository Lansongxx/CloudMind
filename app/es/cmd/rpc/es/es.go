// Code generated by goctl. DO NOT EDIT.
// Source: es.proto

package es

import (
	"context"

	"CloudMind/app/es/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	InsertReq     = pb.InsertReq
	InsertResp    = pb.InsertResp
	SearchForReq  = pb.SearchForReq
	SearchForResp = pb.SearchForResp
	Source        = pb.Source

	Es interface {
		SearchFor(ctx context.Context, in *SearchForReq, opts ...grpc.CallOption) (*SearchForResp, error)
		Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error)
	}

	defaultEs struct {
		cli zrpc.Client
	}
)

func NewEs(cli zrpc.Client) Es {
	return &defaultEs{
		cli: cli,
	}
}

func (m *defaultEs) SearchFor(ctx context.Context, in *SearchForReq, opts ...grpc.CallOption) (*SearchForResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.SearchFor(ctx, in, opts...)
}

func (m *defaultEs) Insert(ctx context.Context, in *InsertReq, opts ...grpc.CallOption) (*InsertResp, error) {
	client := pb.NewEsClient(m.cli.Conn())
	return client.Insert(ctx, in, opts...)
}
