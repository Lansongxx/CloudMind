syntax = "proto3";

option go_package = "./pb";

package pb;

message User{
  string Account = 1;
  string PassWord = 2;
  string NickName = 3;
  string Email = 4;
  string Sex = 5;
  string Name = 6;
  string IdCard = 7;
}
message UserAuth{
  string Account = 1;
  string authType = 2;
  string authKey = 3;
}

//req „ÄÅresp
message RegisterReq {
  string NickName = 1;
  string PassWord = 2;
  string Sex = 3;
  string AuthKey = 4;
  string AuthType = 5;
}
message RegisterResp {
  string AccessToken = 1;
  int64  AccessExpire = 2;
  int64  RefreshAfter = 3;
}

message AccountLoginReq {
  string AuthType = 1;
  string AuthKey = 2;
  string Password = 3;
}
message AccountLoginResp {
  string AccessToken = 1;
  int64  AccessExpire = 2;
  int64  RefreshAfter = 3;
}

message GetInfoReq {
  string  Account = 1;
}
message GetInfoResp {
  User user = 1;
}

message GetUserAuthByAuthKeyReq {
  string  AuthKey = 1;
  string  AuthType = 2;
}
message GetUserAuthByAuthKeyResp {
  UserAuth userAuth = 1;
}

message GetUserAuthByUserIdReq {
  string  Account = 1;
  string  authType = 2;
}
message GetUserAuthyUserIdResp {
  UserAuth userAuth = 1;
}

message GenerateTokenReq {
  string account = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

service usercenter {
  rpc aclogin(AccountLoginReq) returns(AccountLoginResp);
  rpc register(RegisterReq) returns(RegisterResp);
  rpc getinfo(GetInfoReq) returns(GetInfoResp);
  rpc getUserAuthByAuthKey(GetUserAuthByAuthKeyReq) returns(GetUserAuthByAuthKeyResp);
  rpc getUserAuthByUserId(GetUserAuthByUserIdReq) returns(GetUserAuthyUserIdResp);
  rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);
}